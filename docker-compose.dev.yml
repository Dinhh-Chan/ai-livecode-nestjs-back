version: "3.7"

services:
  # Backend development service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"  # Thay đổi port theo cấu hình của bạn
    volumes:
      - .:/app
      - /app/node_modules  # Prevent overwriting node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - postgresql
      - redis
      - mongodb
    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL database
  postgresql:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${SQL_DB:-aisoft_dev}
      POSTGRES_USER: ${SQL_USER:-postgres}
      POSTGRES_PASSWORD: ${SQL_PASSWORD:-password}
      PGDATA: /data/postgres
    volumes:
      - ./docker/postgres:/data/postgres
    ports:
      - "${SQL_PORT:-5432}:5432"
    restart: unless-stopped
    networks:
      - app-network

  # Redis cache
  redis:
    image: redis:6.2-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-password}
    volumes:
      - ./docker/redis:/data
    restart: unless-stopped
    networks:
      - app-network

  # MongoDB
  mongodb:
    image: mongo:6.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: aisoft
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    volumes:
      - ./docker/mongodb:/data/db
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
